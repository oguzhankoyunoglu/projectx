{"version":3,"sources":["components/navi/Navi.js","components/categories/CategoryList.js","components/products/ProductList.js","components/root/Dashboard.js","components/root/App.js","reportWebVitals.js","redux/actions/actionTypes.js","redux/reducers/initialstate.js","redux/reducers/index.js","redux/reducers/changeCategoryReducer.js","index.js","redux/reducers/configureStore.js"],"names":["Navi","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","CategoryList","Component","ProductList","Dashboard","Row","Col","xs","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_CATEGORY","currentCategory","rootReducer","combineReducers","changeCategoryReducer","state","initialstate","action","type","actionTypes","payload","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"uQA2DeA,EA3CF,SAACC,GAAW,IAAD,EACMC,oBAAS,GADf,mBACfC,EADe,KACPC,EADO,KAKtB,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACE,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAlB,wBACA,cAACC,EAAA,EAAD,CAAeC,QANN,kBAAMR,GAAWD,MAO1B,eAACU,EAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,EAAhC,UACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,EAA/B,UACE,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASR,KAAK,eAAd,0BAEF,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAASR,KAAK,2CAAd,sBAEF,eAACS,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,EAAlC,UACE,cAACC,EAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,EAAzB,qBAGA,eAACC,EAAA,EAAD,CAAcC,OAAK,EAAnB,UACE,cAACC,EAAA,EAAD,uBAGA,cAACA,EAAA,EAAD,uBAGA,cAACA,EAAA,EAAD,CAAcC,SAAO,IACrB,cAACD,EAAA,EAAD,6BAMN,cAACE,EAAA,EAAD,mC,gDClDWC,E,4JACjB,WACI,OACI,8BAEI,gD,GAL0BC,aCArBC,E,4JACjB,WACI,OACI,8BAEI,+C,GALyBD,aCGpBE,E,4JACjB,WACI,OACI,8BACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC,EAAD,MAMJ,cAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,SACI,cAAC,EAAD,e,GAbeL,aCWxBM,MAXf,WACE,OACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCPDQ,EAAgB,kBCAf,GACVC,gBAAgB,ICGpB,IAIeC,EAJKC,YAAgB,CAChCC,sBCAW,WAA2E,IAA5CC,EAA2C,uDAArCC,EAAaL,gBAAiBM,EAAO,uCACrF,OAAQA,EAAOC,MACX,KAAKC,EACD,OAAOF,EAAOG,QAClB,QACI,OAAOL,MCDnB,IAAMM,ECFKC,YAAYV,GDGvBW,IAASC,OAAO,eAAC,IAAD,CAAUH,MAAOA,EAAjB,UAAwB,cAAE,EAAF,IAAxB,OACdI,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.49a13e65.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst Navi = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/components/\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n            </NavItem>\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                Options\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Nav>\r\n          <NavbarText>Simple Text</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navi;","import React, {Component} from 'react'\r\n\r\nexport default class CategoryList extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n                <h3>Category</h3>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class ProductList extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n\r\n                <h3>Product</h3>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Row,Col} from 'reactstrap'\r\nimport CategoryList from \"../categories/CategoryList\"\r\nimport ProductList from \"../products/ProductList\"\r\n\r\nexport default class Dashboard extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <Col xs='3'>\r\n                        <CategoryList/>\r\n\r\n                    </Col>\r\n                    \r\n                    \r\n                    \r\n                    <Col xs='9'>\r\n                        <ProductList/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\nimport { Container } from 'reactstrap'\nimport Navi from \"../navi/Navi\"\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  return (\n    <Container>\n      <Navi/>\n      <Dashboard/>\n    </Container>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CHANGE_CATEGORY=\"CHANGE_CATEGORY\"\r\nexport const GET_CATEGORIES_SUCCES=\"GET_CATEGORIES_SUCCES\"\r\n\r\n\r\n\r\n//REDUXTA KULLANILAN YARDIMCI DOSYA\r\n//aksiyonları yazıyoruz ","export default{\r\n    currentCategory:{}  //ilk kategori bomboş\r\n}","import {combineReducers} from 'redux'\r\nimport changeCategoryReducer from './changeCategoryReducer'\r\n//fonksiyon combinereducers\r\n//index te bütün store ları bir araya getirmemiz gerek\r\nconst rootReducer = combineReducers({\r\n    changeCategoryReducer\r\n}) \r\n\r\nexport default rootReducer;","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialstate from \"./initialstate\";\r\n//* hepsini alıyor\r\n\r\n//tutucu \r\nexport default function changeCategoryReducer(state=initialstate.currentCategory, action){\r\n    switch (action.type){\r\n        case actionTypes.CHANGE_CATEGORY :\r\n            return action.payload            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/root/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\"\nimport configureStore from \"./redux/reducers/configureStore\"\n\n\nconst store = configureStore();\nReactDOM.render(<Provider store={store}>< App/> </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","//depo , aksiyonları ve reducerları tutuyoruz store da \r\n//stor u oluşturacak fonk buraya yazılırmış\r\n\r\nimport {createStore} from \"redux\"   //function\r\nimport rootReducer from \"./index\"\r\n\r\nexport default function configureStore(){\r\n    return createStore(rootReducer)\r\n}\r\n\r\n"],"sourceRoot":""}